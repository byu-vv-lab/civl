/* stdio-c.cvl: code included into a C/stdio.h program
 * to support transformation to a CIVL-C program.
 *
 * The transformer will have to do the following:
 *
 * Replace calls of the form printf(...) to fprintf(stdout, ...).
 * Replace calls of the form scanf(...) to fscanf(stdin, ...).
 * 
 */

$filesystem CIVL_filesystem = $filesystem_create($here);

/* The files which were modified or created are written here
 * at the end of the program.   They constitute outputs of
 * the program.  The files will be sorted in some canonical
 * way.
 */
$output $filesystem CIVL_output_filesystem;

FILE * stdout = $fopen(CIVL_filesystem, "CIVL_stdout", "wx");

FILE * stderr = $fopen(CIVL_filesystem, "CIVL_stderr", "wx");

FILE * stdin = $fopen(CIVL_filesystem, "CIVL_stdin", "r");

FILE *fopen(const char * restrict filename, const char * restrict mode) {
  return $fopen(CIVL_filesystem, filename, mode);
}

// make a system function to avoid dealing with the var args
// it will just call $fprintf with CIVL_filesystem.
// this will be implemented in an executor for stdio-c
// get rid of dash.  That executor will have to find
// a variable called CIVL_filesystem starting from
// this process.  Can this be done without strings?

// would prefer that the model builder replaced calls to
// fprintf with something else.    or AST transformer.
// 

// int fprintf(FILE * restrict stream, const char * restrict format, ...);

// ditto
// int fscanf(FILE * restrict stream, const char * restrict format, ...);

// int printf(const char * restrict format, ...);

// int scanf(const char * restrict format, ...);
