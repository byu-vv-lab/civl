/*****************************************************************************
* SOURCE: This is a translation of a Pthread program from the Lawrence Livermore
* Computing Center POSIX Threads Programming Exercise at:
* https://computing.llnl.gov/tutorials/pthreads/exercise.html
* SUPERSOURCE: Adapted from example code in "Pthreads Programming", B. Nichols
*   et al. O'Reilly and Associates.
* FILE: bug3.cvl
* DESCRIPTION:
*   This "hello world" Pthreads program demonstrates an unsafe (incorrect) 
*   way to pass thread arguments at thread creation. Compare with hello_arg1.c.
* Command line execution:
* civl verify bug3.cvl
******************************************************************************/
#include "pthread.cvh"
#include <civlc.h>
#include <stdio.h>
#include <stdlib.h>
#define NUM_THREADS	8

void *PrintHello(void *threadid){
  long taskid = (long)*threadid;
  //sleep(1);
  printf("Hello from thread %d\n", taskid);
  //pthread_exit(NULL);
}

int main(int argc, char *argv[]){
  pthread_t threads[NUM_THREADS];
  int rc; 
  long t;

  for(t=0;t<NUM_THREADS;t++) {
    printf("Creating thread %d\n", t);
    rc = pthread_create(&threads[t], NULL, PrintHello, (void *)&t);
    if (rc) {
      printf("ERROR; return code from pthread_create() is %d\n", rc);
      exit(-1);
      $assert($false, "ERROR; return code from pthread_create() is");
    }
  }
  //pthread_exit(NULL);
  return 0;
}

